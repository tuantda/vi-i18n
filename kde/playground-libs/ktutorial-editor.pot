# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR This_file_is_part_of_KDE
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2012-12-02 03:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgctxt "NAME OF TRANSLATORS"
msgid "Your names"
msgstr ""

msgctxt "EMAIL OF TRANSLATORS"
msgid "Your emails"
msgstr ""

#: src/commands/ReactionCommands.cpp:36
msgctxt "@action"
msgid "Set reaction trigger type"
msgstr ""

#: src/commands/ReactionCommands.cpp:58
msgctxt "@action"
msgid "Set reaction option name"
msgstr ""

#: src/commands/ReactionCommands.cpp:82
msgctxt "@action"
msgid "Set reaction condition to wait for"
msgstr ""

#: src/commands/ReactionCommands.cpp:114
msgctxt "@action"
msgid "Set reaction response type"
msgstr ""

#: src/commands/ReactionCommands.cpp:136
msgctxt "@action"
msgid "Set reaction next step id"
msgstr ""

#: src/commands/ReactionCommands.cpp:158
msgctxt "@action"
msgid "Set reaction custom code"
msgstr ""

#: src/commands/StepCommands.cpp:36
msgctxt "@action"
msgid "Set step id"
msgstr ""

#: src/commands/StepCommands.cpp:58
msgctxt "@action"
msgid "Set step text"
msgstr ""

#: src/commands/StepCommands.cpp:80
msgctxt "@action"
msgid "Set step setup code"
msgstr ""

#: src/commands/StepCommands.cpp:102
msgctxt "@action"
msgid "Set step tear down code"
msgstr ""

#: src/commands/StepCommands.cpp:141 src/EditActions.cpp:291
msgctxt "@action"
msgid "Add reaction"
msgstr ""

#: src/commands/StepCommands.cpp:186 src/EditActions.cpp:204
msgctxt "@action"
msgid "Remove reaction"
msgstr ""

#: src/commands/TutorialCommands.cpp:36
msgctxt "@action"
msgid "Set tutorial name"
msgstr ""

#: src/commands/TutorialCommands.cpp:58
msgctxt "@action"
msgid "Set tutorial description"
msgstr ""

#: src/commands/TutorialCommands.cpp:80
msgctxt "@action"
msgid "Set tutorial license"
msgstr ""

#: src/commands/TutorialCommands.cpp:102
msgctxt "@action"
msgid "Set tutorial setup code"
msgstr ""

#: src/commands/TutorialCommands.cpp:125
msgctxt "@action"
msgid "Set tutorial tear down code"
msgstr ""

#: src/commands/TutorialCommands.cpp:164 src/EditActions.cpp:249
msgctxt "@action"
msgid "Add step"
msgstr ""

#: src/commands/TutorialCommands.cpp:209 src/EditActions.cpp:177
msgctxt "@action"
msgid "Remove step"
msgstr ""

#: src/EditActions.cpp:108
msgctxt "@action"
msgid "Set information..."
msgstr ""

#: src/EditActions.cpp:109
msgctxt "@info:status"
msgid "Set the name and description of the tutorial."
msgstr ""

#: src/EditActions.cpp:117
msgctxt "@action"
msgid "Set license..."
msgstr ""

#: src/EditActions.cpp:118
msgctxt "@info:status"
msgid "Set the license text of the tutorial."
msgstr ""

#: src/EditActions.cpp:125 src/EditActions.cpp:158
msgctxt "@action"
msgid "Set setup code..."
msgstr ""

#: src/EditActions.cpp:126
msgctxt "@info:status"
msgid "Set the custom code to be executed when the tutorial starts."
msgstr ""

#: src/EditActions.cpp:133 src/EditActions.cpp:167
msgctxt "@action"
msgid "Set tear down code..."
msgstr ""

#: src/EditActions.cpp:134
msgctxt "@info:status"
msgid "Set the custom code to be executed when the tutorial finishes."
msgstr ""

#: src/EditActions.cpp:141
msgctxt "@action"
msgid "Add step..."
msgstr ""

#: src/EditActions.cpp:142
msgctxt "@info:status"
msgid "Add a new step to the tutorial."
msgstr ""

#: src/EditActions.cpp:149
msgctxt "@action"
msgid "Set step data..."
msgstr ""

#: src/EditActions.cpp:150
msgctxt "@info:status"
msgid "Set the name and text of the currently selected step."
msgstr ""

#: src/EditActions.cpp:159
msgctxt "@info:status"
msgid ""
"Set the custom code to be executed when the tutorial passes to the currently "
"selected step."
msgstr ""

#: src/EditActions.cpp:168
msgctxt "@info:status"
msgid ""
"Set the custom code to be executed when the tutorial changes from the "
"currently selected step to another step."
msgstr ""

#: src/EditActions.cpp:178
msgctxt "@info:status"
msgid "Removes the currently selected step from the tutorial."
msgstr ""

#: src/EditActions.cpp:186
msgctxt "@action"
msgid "Add reaction..."
msgstr ""

#: src/EditActions.cpp:187
msgctxt "@info:status"
msgid "Add a new reaction to the selected step."
msgstr ""

#: src/EditActions.cpp:195
msgctxt "@action"
msgid "Set reaction data..."
msgstr ""

#: src/EditActions.cpp:196
msgctxt "@info:status"
msgid "Set the trigger and the response of the currently selected reaction."
msgstr ""

#: src/EditActions.cpp:205
msgctxt "@info:status"
msgid "Removes the currently selected reaction from its step."
msgstr ""

#: src/FileActions.cpp:60
msgctxt "@label"
msgid ""
"The tutorial has been modified.<nl/>Do you want to save your changes or "
"discard them?"
msgstr ""

#: src/FileActions.cpp:62
msgctxt "@title:window"
msgid "Close tutorial"
msgstr ""

#: src/FileActions.cpp:92
#, kde-format
msgctxt "@label"
msgid "There was a problem when trying to open the file:<nl/>%1"
msgstr ""

#: src/FileActions.cpp:94
msgctxt "@title:window"
msgid "File could not be read"
msgstr ""

#: src/FileActions.cpp:98
#, kde-format
msgctxt "@label"
msgid "There was a problem when trying to load the tutorial:<nl/>%1"
msgstr ""

#: src/FileActions.cpp:100
msgctxt "@title:window"
msgid "Tutorial could not be loaded"
msgstr ""

#: src/FileActions.cpp:153
msgctxt "@action"
msgid "Export..."
msgstr ""

#: src/FileActions.cpp:154
msgctxt "@info:status"
msgid "Exports the tutorial to a script."
msgstr ""

#: src/FileActions.cpp:168
msgctxt "@title"
msgid "Open Tutorial"
msgstr ""

#: src/FileActions.cpp:171 src/FileActions.cpp:213
msgctxt "@item:inlistbox A KFileDialog filter"
msgid "*.xml|XML file"
msgstr ""

#: src/FileActions.cpp:189 src/FileActions.cpp:224
#, kde-format
msgctxt "@label"
msgid "There was a problem when trying to save the tutorial:<nl/>%1"
msgstr ""

#: src/FileActions.cpp:191 src/FileActions.cpp:226 src/TutorialTester.cpp:83
msgctxt "@title:window"
msgid "Tutorial could not be saved"
msgstr ""

#: src/FileActions.cpp:209
msgctxt "@title"
msgid "Save Tutorial"
msgstr ""

#: src/FileActions.cpp:246
msgctxt "@title"
msgid "Export Tutorial"
msgstr ""

#: src/FileActions.cpp:261
#, kde-format
msgctxt "@label"
msgid "There was a problem when trying to save the exported tutorial:<nl/>%1"
msgstr ""

#: src/FileActions.cpp:263
msgctxt "@title:window"
msgid "Exported tutorial could not be saved"
msgstr ""

#. i18n: ectx: Menu (editTutorials)
#: src/ktutorial-editorui.rc:10
msgctxt "@title:menu"
msgid "Tutorial"
msgstr ""

#. i18n: ectx: Menu (editSteps)
#: src/ktutorial-editorui.rc:17
msgctxt "@title:menu Noun, a step in a tutorial"
msgid "Step"
msgstr ""

#. i18n: ectx: Menu (editReactions)
#: src/ktutorial-editorui.rc:25
msgctxt "@title:menu Noun, a reaction in a step"
msgid "Reaction"
msgstr ""

#. i18n: ectx: Menu (panels)
#: src/ktutorial-editorui.rc:36
msgctxt "@title:menu"
msgid "Panels"
msgstr ""

#. i18n: ectx: ToolBar (mainToolBar)
#: src/ktutorial-editorui.rc:47
msgctxt "@title:menu"
msgid "Main Toolbar"
msgstr ""

#: src/KTutorialEditor.cpp:167
msgctxt "@title"
msgid "Edit tutorial"
msgstr ""

#: src/KTutorialEditor.cpp:172
msgctxt "@title"
msgid "Edit step"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, ReactionWidget)
#: src/KTutorialEditor.cpp:176 src/view/ReactionWidget.ui:14
msgctxt "@title"
msgid "Edit reaction"
msgstr ""

#: src/KTutorialEditor.cpp:253
msgctxt ""
"@title:window Window title for KTutorial editor when the tutorial has no "
"associated URL"
msgid "New file"
msgstr ""

#: src/KTutorialEditor.cpp:272
#, kde-format
msgctxt ""
"@title:window Wrapper for the window title when the tutorial was modified "
"but not saved yet"
msgid "%1 [not saved]"
msgstr ""

#: src/main.cpp:28
msgctxt "@title"
msgid "KTutorial editor"
msgstr ""

#: src/main.cpp:30
msgctxt "@title"
msgid "An editor to create tutorials for <application>KTutorial</application>."
msgstr ""

#: src/main.cpp:33
msgctxt "@info:credit"
msgid "Copyright (C) 2010-2012 Daniel Calvi침o S치nchez"
msgstr ""

#: src/main.cpp:34
msgctxt "@info:credit"
msgid "Daniel Calvi침o S치nchez"
msgstr ""

#: src/main.cpp:35
msgctxt "@info:credit"
msgid "Main developer"
msgstr ""

#: src/main.cpp:40
msgctxt "@info:shell"
msgid "The tutorial to open"
msgstr ""

#: src/serialization/Serialization.cpp:41
#, kde-format
msgctxt "@info/plain"
msgid "A file was expected, but '%1' is a folder"
msgstr ""

#: src/serialization/Serialization.cpp:105
msgctxt "@item:inlistbox A KFileDialog filter"
msgid "*.js|JavaScript file"
msgstr ""

#: src/serialization/TutorialReader.cpp:51
#, kde-format
msgid "XML document is not well formed: %1, line %2, column %3"
msgstr ""

#: src/serialization/TutorialReader.cpp:56
#, kde-format
msgid "Unknown root element, <emphasis>tutorial</emphasis> expected, got: %1"
msgstr ""

#: src/TestTutorialActions.cpp:64
msgctxt "@action"
msgid "Test tutorial"
msgstr ""

#: src/TestTutorialActions.cpp:65
msgctxt "@info:status"
msgid "Starts the tutorial in the target application."
msgstr ""

#: src/TestTutorialActions.cpp:74
msgctxt "@action"
msgid "Test tutorial from current step"
msgstr ""

#: src/TestTutorialActions.cpp:75
msgctxt "@info:status"
msgid "Starts the tutorial in the target application from the current step."
msgstr ""

#: src/tutorials/BasicConcepts.js:21
msgid "Basic concepts"
msgstr ""

#: src/tutorials/BasicConcepts.js:22
msgid ""
"This tutorial shows how to design a basic tutorial for the KTutorial test "
"application."
msgstr ""

#: src/tutorials/BasicConcepts.js:26
msgctxt "@info"
msgid ""
"<para>Welcome to the tutorial to learn the basic concepts in "
"<application>KTutorial editor</application>.</para>\n"
"\n"
"<para>When you end this tutorial you will have written a tutorial for the "
"KTutorial test application that teaches the user how to clear the text area. "
"First it will ask the user to write something in the text area, and then "
"clear it using a menu item or a toolbar button.</para>\n"
"\n"
"<para>We will start setting the tutorial information. This information is "
"shown to the user in the tutorial selection dialog as a way to know the "
"purpose of a tutorial before starting it.</para>\n"
"\n"
"<para>Click the <link url=\"widget:setTutorialInformationToolButton"
"\"><interface>Set information</interface></link> direct access in the dock "
"panels, or in <interface>Edit|Tutorial|Set information...</interface>.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:40
msgctxt "@info"
msgid ""
"Now, set the name of the tutorial to \"Example\" and its description to "
"\"Example tutorial\" and accept the dialog clicking in <link url=\"widget:"
"okButton\"><interface>Ok</interface> button</link>."
msgstr ""

#: src/tutorials/BasicConcepts.js:54
msgctxt "@info"
msgid ""
"<para>Now it is time to add the first step of the tutorial. Every tutorial "
"must have a step called \"start\", so KTutorial can know where the tutorial "
"starts.</para>\n"
"\n"
"<para>Click the <link url=\"widget:addStepToolButton\"><interface>Add step</"
"interface></link> direct access in the dock panels, or in <interface>Edit|"
"Step|Add step...</interface>.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:68
msgctxt "@info"
msgid ""
"<para>Set the id of the step to <emphasis>start</emphasis> and the text to "
"<emphasis>Write &lt;emphasis&gt;Hello world!&lt;/emphasis&gt; in the text "
"area.</emphasis>, then accept the dialog.</para>\n"
"\n"
"<para><emphasis>&lt;emphasis&gt;</emphasis> is a special markup that is not "
"shown in the tutorial. Instead, the text between <emphasis>&lt;emphasis&gt;</"
"emphasis> and <emphasis>&lt;/emphasis&gt;</emphasis> will be written in "
"italics.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:82
msgctxt "@info"
msgid ""
"<para>The start step will wait until the user writes <emphasis>Hello world!</"
"emphasis> in the text area of the KTutorial test application.</para>\n"
"\n"
"<para>For the step to do that we have to add a reaction to it. To add a "
"reaction, in the <link url=\"widget:centralTreeView\">tutorial tree view</"
"link> select the step to add the reaction to and click the <link url="
"\"widget:addReactionToolButton\"><interface>Add reaction</interface></link> "
"direct access in the dock panels, or in <interface>Edit|Reaction|Add "
"reaction...</interface>.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:96
msgctxt "@info"
msgid ""
"<para>A reaction can be triggered when the user selects some option or when "
"a condition is met, but not both in the same reaction (although several "
"reactions can be added to the same step).</para>\n"
"\n"
"<para>We want the step to react when something happens, that is, when a "
"condition is met, so select the <link url=\"widget:"
"triggerConditionRadioButton\"><interface>condition met</interface> radio "
"button</link>.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:110
msgctxt "@info"
msgid ""
"<para>Once the <interface>condition met</interface> button is selected we "
"can add a new condition to the reaction. Only one condition can be added to "
"each reaction, although the condition can be composed of other conditions.</"
"para>\n"
"\n"
"<para>Click <link url=\"widget:addButton\"><interface>Add...</interface> "
"button</link> to show the dialog to add new conditions.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:124
msgctxt "@info"
msgid ""
"<para>In the dialog you can select the type of condition to wait for.</"
"para>\n"
"\n"
"<para>There are simple and composed conditions. Simple conditions wait for "
"something specific. Composed conditions wait for other conditions to be met."
"</para>\n"
"\n"
"<para>In this case, as it will be explained later, we want to wait for a "
"signal, so select \"The specified signal is emitted\" in the <link url="
"\"widget:waitForTypeComboBox\">combobox</link> and accept the dialog.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:138
msgctxt "@info"
msgid ""
"<para>Just adding the condition is not enough to define it. Which signal "
"will it wait for? Emitted by which object? Simple conditions have to be "
"edited after being added to set its parameters.</para>\n"
"\n"
"<para>Composed conditions, on the other hand, have no parameters to be set. "
"They are defined by its own type and its child conditions.</para>\n"
"\n"
"<para>To edit a condition, select it in the <link url=\"widget:"
"waitForTreeView\">condition tree</link> and then click the <link url="
"\"widget:editButton\"><interface>Edit...</interface> button</link>.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:152
msgctxt "@info"
msgid ""
"<para>The parameters that have to be set depend on the type of the "
"condition. In this case, the name of the object that emits the signal and "
"the name of the signal are needed.</para>\n"
"\n"
"<para><application>KTutorial editor</application> is able to <emphasis>talk</"
"emphasis> to the application that the tutorial is being designed for and "
"show you the name of the objects and the signals they emit. However, this "
"will be seen in another tutorial. In this one you will be given all the "
"values you need.</para>\n"
"\n"
"<para>Ok, back to the condition. We have asked the user to write "
"<emphasis>Hello world!</emphasis> in the text area, so we want to react when "
"the text in the text area changes.</para>\n"
"\n"
"<para>The text area is appropriately named <emphasis>textArea</emphasis>, "
"and it emits the signal <emphasis>textChanged()</emphasis>. Set those values "
"in the <link url=\"widget:objectNameLineEdit\"><interface>emitter name</"
"interface> field</link> and in the <link url=\"widget:signalNameLineEdit"
"\"><interface>signal name</interface> field</link>, respectively, and accept "
"the dialog.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:166
msgctxt "@info"
msgid ""
"<para>Now that the parameters of the condition are set, the step will react "
"whenever the user writes something in the text area. But, how should it "
"react?</para>\n"
"\n"
"<para>We want to advance to the next step when the user writes "
"<emphasis>Hello world!</emphasis>, but textChanged() is emitted whenever the "
"text was changed no matter what was written. So, before changing to the next "
"step, we must check that the text area contains the expected text.</para>\n"
"\n"
"<para>The checks will be made using some custom JavaScript code, so select "
"the <link url=\"widget:responseCodeRadioButton\"><interface>custom response "
"code</interface> radio button.</link>.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:180
msgctxt "@info"
msgid ""
"<para>The following code snippet gets the text area object, checks if it "
"contains the text <emphasis>Hello world!</emphasis> (without taking into "
"account upper and lower cases) and, in that case, changes to the step "
"<emphasis>clearText</emphasis>:</para>\n"
"\n"
"<pre>textArea = ktutorial.findObject(\"textArea\");\n"
"if (textArea.plainText.toLowerCase() == t.i18n(\"Hello world!\").toLowerCase"
"()) {\n"
"    tutorial.nextStep(\"clearText\");\n"
"}</pre>\n"
"\n"
"<para>You can copy the code selecting it with the mouse, clicking with the "
"right mouse button on the selection and then clicking on <interface>Copy</"
"interface>. To paste it, click with the right mouse button on the <link url="
"\"widget:responseCodeTextEdit\">custom response code area</link> and then on "
"<interface>Paste</interface>. Once done, accept the dialog.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:194
msgctxt "@info"
msgid ""
"<para>Well, we have just created the start step of the tutorial. It waits "
"for the user to write <emphasis>Hello world!</emphasis> in the text area and "
"then changes to the clearText step.</para>\n"
"\n"
"<para>Now we will take care of the clearText step. Let's begin by adding a "
"new step.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:208
msgctxt "@info"
msgid ""
"<para>Set the id of the step to <emphasis>clearText</emphasis> and the text "
"to <emphasis>Now you have to trigger the clear action. To do this you can "
"click in &lt;interface&gt;File|Clear&lt;/interface&gt;, or in the toolbar "
"button called &lt;interface&gt;Clear&lt;/interface&gt;.</emphasis>, then "
"accept the dialog.</para>\n"
"\n"
"<para>Like <emphasis>&lt;emphasis&gt;</emphasis> in the text of the start "
"step, <emphasis>&lt;interface&gt;</emphasis> is another special markup used "
"when referring to something in the graphical user interface.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:222
msgctxt "@info"
msgid ""
"<para>The clearText step will wait for the user to trigger the clear action "
"(that is, clicking <interface>Clear</interface> button in the tool bar or "
"<interface>File|Clear</interface> in the menu).</para>\n"
"\n"
"<para>So we have to add a reaction to the clearText step. Like we did with "
"the start step, select the clearText step in the tutorial tree view and "
"click on <interface>Add reaction</interface>.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:236
msgctxt "@info"
msgid ""
"<para>Again, to wait for something to happen we have to add a condition. And "
"again, that condition is a signal being emitted.</para>\n"
"\n"
"<para>Add a new condition to wait for a signal and edit it to set its "
"parameters.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:250
msgctxt "@info"
msgid ""
"<para>Usually, buttons in tool bars and menu entries are graphical "
"representations of the so called <emphasis>actions</emphasis>. Actions are "
"commands given to the application, for example, <emphasis>add step</"
"emphasis> or <emphasis>save file</emphasis>, and they behave the same no "
"matter if they were triggered from a tool bar or from the menu.</para>\n"
"\n"
"<para>So, as a rule of thumb, when you expect the user to click on a menu "
"item or in a tool bar button, wait for the <emphasis>triggered()</emphasis> "
"signal of the action they represent, instead of the <emphasis>clicked()</"
"emphasis> signal of the button.</para>\n"
"\n"
"<para>In this case, the object name of the action is just <emphasis>clear</"
"emphasis>. Set it in the emitter name, set the signal name to "
"<emphasis>triggered()</emphasis> and accept the dialog.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:264
msgctxt "@info"
msgid ""
"<para>This time there is nothing else to be checked once the condition is "
"met. When the clear action is triggered the text area is cleared, so the "
"signal being emitted is enough to change to the next step in the tutorial.</"
"para>\n"
"\n"
"<para>Just set the name of the step to change to, which we will call "
"<emphasis>end</emphasis>, in the <link url=\"widget:responseStepLineEdit"
"\"><interface>change to step</interface> field</link> and accept the dialog."
"</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:278
msgctxt "@info"
msgid "<para>We are almost done. Add another step, the last one.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:292
msgctxt "@info"
msgid ""
"<para>Set the id of the step to <emphasis>end</emphasis> and its text to "
"<emphasis>And that's all. Now you can close the tutorial.</emphasis>, then "
"accept the dialog.</para>"
msgstr ""

#: src/tutorials/BasicConcepts.js:306
msgctxt "@info"
msgid ""
"<para>The last step does not need a reaction, as it just informs the user "
"that the tutorial has ended and that it can be closed.</para>\n"
"\n"
"<para>Finally, to install the tutorial you have just made you would have to "
"export it (<interface>File|Export...</interface> or <interface>Export</"
"interface> button in the tool bar) to a JavaScript file and save it in the "
"tutorials subdirectory of the data directory of KTutorial test application.</"
"para>\n"
"\n"
"<para>Of course, this is too cumbersome to test a tutorial while it is being "
"designed. <application>KTutorial editor</application> is able to launch an "
"application and start the tutorial being designed on it, but this will be "
"shown in another tutorial.</para>\n"
"\n"
"<para>That's all, this basic <application>KTutorial editor</application> "
"walkthrough ends here.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:21
msgid "Interacting with the target application"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:22
msgid ""
"This tutorial shows how KTutorial editor can interact with the target "
"application of a tutorial, for example, to show the object names or test the "
"tutorial without installing it."
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:26
msgctxt "@info"
msgid ""
"<para>Welcome to the tutorial to learn how <application>KTutorial editor</"
"application> can interact with the target application.</para>\n"
"\n"
"<para>The target application is the one that the tutorial is being designed "
"for. <application>KTutorial editor</application> can \"talk\" with target "
"applications to provide some useful features when designing a tutorial.</"
"para>\n"
"\n"
"<para>To see these features we will design a tutorial for "
"<application>KTutorial editor</application> itself that asks the user to add "
"a new step and accept the step dialog.</para>\n"
"\n"
"<para>Let's begin by <link url=\"widget:addStepToolButton\">adding a new "
"step</link>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:40
msgctxt "@info"
msgid ""
"<para>Set the <link url=\"widget:idLineEdit\">id of the step</link> to "
"<emphasis>start</emphasis>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:61
msgctxt "@info"
msgid ""
"<para>Set the <link url=\"widget:textTextEdit\">text of the step</link> to:</"
"para>\n"
"\n"
"<para><emphasis>Add a new step.</emphasis></para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:73
msgid "Add a new step."
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:82
msgctxt "@info"
msgid ""
"<para>And finally accept the dialog clicking in the <link url=\"widget:"
"okButton\"><interface>Ok</interface> button</link>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:96
msgctxt "@info"
msgid ""
"<para>Now, select the <emphasis>start</emphasis> step and add a new reaction "
"to it.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:110
#: src/tutorials/InteractingWithTheTargetApplication.js:393
msgctxt "@info"
msgid ""
"<para>Set the trigger type to <link url=\"widget:triggerConditionRadioButton"
"\"><interface>condition met</interface></link>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:124
#: src/tutorials/InteractingWithTheTargetApplication.js:407
msgctxt "@info"
msgid ""
"<para><link url=\"widget:addButton\"><interface>Add</interface></link> a new "
"condition.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:138
msgctxt "@info"
msgid ""
"<para>We want the step to react when the dialog to add a new step is shown, "
"so select <emphasis>The specified window is shown</emphasis> in the <link "
"url=\"widget:waitForTypeComboBox\">combo box</link>.</para>"
msgstr ""

#. i18n: ectx: property (text), item, widget (KComboBox, waitForTypeComboBox)
#: src/tutorials/InteractingWithTheTargetApplication.js:150
#: src/view/NewWaitForWidget.ui:71
msgctxt "@item:inlistbox"
msgid "The specified window is shown"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:159
#: src/tutorials/InteractingWithTheTargetApplication.js:442
msgctxt "@info"
msgid ""
"<para><link url=\"widget:addWaitForDialog/okButton\">Accept the dialog</"
"link> to add the condition to wait for.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:173
#: src/tutorials/InteractingWithTheTargetApplication.js:456
msgctxt "@info"
msgid ""
"<para>Select the condition just added and <link url=\"widget:editButton"
"\">edit</link> it.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:187
msgctxt "@info"
msgid ""
"<para>Now it is time to set the name of the window/dialog that we want to "
"wait for. We asked the user to add a new step, so we want to wait for the "
"dialog that appears when <interface>Add step</interface> is clicked. But... "
"what is the object name of that dialog (note that the object name is not the "
"title)?</para>\n"
"\n"
"<para>Usually the name of the objects (windows, widgets...) will be quite "
"descriptive, so we can suppose how it will look like. However, a name that "
"<emphasis>is something like...</emphasis> is not enough, we need the exact "
"name.</para>\n"
"\n"
"<para><application>KTutorial editor</application> is able to show you a list "
"with all the objects in the target application that KTutorial can access to."
"</para>\n"
"\n"
"<para>Click on <link url=\"widget:objectNamePushButton\">Choose...</link> to "
"select the object from the list.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:205
msgctxt "@info"
msgid ""
"<para>To show you the list with the objects in the target application "
"<application>KTutorial editor</application> needs to know which one is the "
"target application. You can select it from the list of known applications or "
"set its executable name.</para>\n"
"\n"
"<para>Once the target application is set <application>KTutorial editor</"
"application> will start a new instance of that application to \"talk\" with "
"it.</para>\n"
"\n"
"<para>The target application of this tutorial is <application>KTutorial "
"editor</application> itself, so select it in the list or write "
"<emphasis>ktutorial-editor</emphasis> (which is the name of its executable) "
"in the text line, then accept the dialog.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:219
msgctxt "@info"
msgid ""
"<para><application>KTutorial editor</application> needs to know which "
"application is the target application of the tutorial to \"talk\" with it.</"
"para>\n"
"\n"
"<para>It seems that you already had selected the target application before "
"starting this tutorial. Unfortunately, if the target application already "
"selected is not <application>KTutorial editor</application>, you will have "
"to close this tutorial and that target application, create a new tutorial "
"(using <interface>File|New</interface>, or <interface>New</interface> in the "
"tool bar) and start this tutorial again.</para>\n"
"\n"
"<para>Yes, I guess I should have warned you about this when you started this "
"tutorial :P</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:222
#: src/tutorials/InteractingWithTheTargetApplication.js:235
msgctxt "@action Tutorial option"
msgid "Continue"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:232
msgctxt "@info"
msgid ""
"<para>Now you have the list with the objects that KTutorial can access in "
"the target application.</para>\n"
"\n"
"<para>Note that when you select a widget in the list the widget is "
"highlighted in the target application. For example, select the object named "
"<emphasis>centralTreeView</emphasis>. You will see that, in the target "
"application, the tree view that shows the tutorial being designed is "
"highlighted.</para>\n"
"\n"
"<para>The list also shows the parent/child relationship between objects. For "
"example, select <emphasis>editTutorialDock</emphasis>. The whole dock is "
"highlighted.</para>\n"
"\n"
"<para>Now, select the unnamed object from the ActionListWidget class that "
"appears in the list as a child element of the <emphasis>editTutorialDock</"
"emphasis>. Now only the buttons in the dock are highlighted, as they are "
"part of that widget.</para>\n"
"\n"
"<para>And finally, if you select the "
"<emphasis>setTutorialInformationToolButton</emphasis> element, only the "
"button to set the information of the tutorial will be highlighted.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:245
msgctxt "@info"
msgid ""
"<para>You may have noticed that the list does not contain the object we are "
"looking for, that is, the dialog that is shown to add a new step. The reason "
"is that the list does not contain all the objects that may exist in the "
"target application at any time. Instead, it is dynamic. When a new object is "
"added or an existing one removed from the target application the list "
"reflects that.</para>\n"
"\n"
"<para>So, in the target application, show the dialog to add a new step. Once "
"you do this, a new object (and all its children) will be added to the end of "
"the list. The object is called <emphasis>StepDataDialog</emphasis> and, yes, "
"it is the dialog that has just been shown.</para>\n"
"\n"
"<para>Select the <emphasis>StepDataDialog</emphasis> element in the list and "
"<link url=\"widget:RemoteObjectChooser/okButton\">accept the dialog</link>.</"
"para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:259
msgctxt "@info"
msgid ""
"<para>Now that the name of the window was set <link url=\"widget:"
"editWaitForWindowDialog/okButton\">accept the dialog</link>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:273
msgctxt "@info"
msgid ""
"<para>We want to change to another step when the window is shown, so now it "
"is time to set the name of that other step.</para>\n"
"\n"
"<para>Set the <link url=\"widget:responseStepLineEdit\">step to change to</"
"link> to <emphasis>acceptDialog</emphasis>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:294
#: src/tutorials/InteractingWithTheTargetApplication.js:365
#: src/tutorials/InteractingWithTheTargetApplication.js:582
#: src/tutorials/InteractingWithTheTargetApplication.js:652
msgctxt "@info"
msgid ""
"<para>And finally <link url=\"widget:okButton\">accept the dialog</link>.</"
"para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:308
msgctxt "@info"
msgid ""
"<para>We are done with the first step. Now we will take care of the second "
"one, that will wait until the user accepts the dialog.</para>\n"
"\n"
"<para>Of course, the first thing to do is to <link url=\"widget:"
"addStepToolButton\">add a new step</link>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:322
msgctxt "@info"
msgid ""
"<para>Set the <link url=\"widget:idLineEdit\">id of the step</link> to "
"<emphasis>acceptDialog</emphasis>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:343
msgctxt "@info"
msgid ""
"<para>Set the <link url=\"widget:textTextEdit\">text of the step</link> to:</"
"para>\n"
"\n"
"<para><emphasis>Set the id to &lt;emphasis&gt;start&lt;/emphasis&gt; and the "
"text to &lt;emphasis&gt;First step&lt;/emphasis&gt;, then accept the dialog."
"</emphasis></para>\n"
"\n"
"<para>Remember that you can copy the text above and paste it in the text "
"area, you don't need to write it yourself.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:356
msgid ""
"Set the id to &lt;emphasis&gt;start&lt;/emphasis&gt; and the text to &lt;"
"emphasis&gt;First step&lt;/emphasis&gt;, then accept the dialog."
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:379
msgctxt "@info"
msgid ""
"<para>Now, select the <emphasis>acceptDialog</emphasis> step and add a new "
"reaction to it.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:421
msgctxt "@info"
msgid ""
"<para>To wait for the user to accept the dialog we will wait for the user to "
"click on the <interface>Ok</interface> button.</para>\n"
"\n"
"<para>Buttons emit a signal whenever they are clicked, so select "
"<emphasis>The specified signal is emitted</emphasis> in the <link url="
"\"widget:waitForTypeComboBox\">combo box</link>.</para>"
msgstr ""

#. i18n: ectx: property (text), item, widget (KComboBox, waitForTypeComboBox)
#: src/tutorials/InteractingWithTheTargetApplication.js:433
#: src/view/NewWaitForWidget.ui:61
msgctxt "@item:inlistbox"
msgid "The specified signal is emitted"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:470
msgctxt "@info"
msgid ""
"<para>We are again in a point where we need to know the name of an object, "
"in this case, the name of the <interface>Ok</interface> button. This time, "
"though, we will not choose it from the list. We will see another little "
"<application>KTutorial editor</application> feature instead.</para>\n"
"\n"
"<para>When there is a target application running (if you closed it, start it "
"again clicking on <interface>Choose...</interface> and then closing the "
"list), the field to set an object name offers text completion with the names "
"of the objects in the target application. Like the list to select an object, "
"the completion list is dynamic, so entries are added and removed based on "
"objects added and removed in the target application.</para>\n"
"\n"
"<para>Ensure that the target application is running and that, in that target "
"application, the dialog to add a new step is open. Then just write "
"<emphasis>o</emphasis> in the <link url=\"widget:objectNameLineEdit"
"\">emitter name field</link> and watch the completion list pop up.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:491
msgctxt "@info"
msgid ""
"<para>As you can see, the completion list proposes <emphasis>okButton</"
"emphasis>, as it is the only object in the target application whose name "
"starts with <emphasis>o</impact>. The completion list proposes all the "
"objects in the target application whose name starts with the text written in "
"the emitter name field.</para>\n"
"\n"
"<para>You should set the emitter name to <emphasis>okButton</emphasis>, but "
"instead of writing it use the completion list. To use some proposed "
"completion click on it with the mouse, or traverse the list using the up and "
"down keys pressing enter when you reach the desired one.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:512
msgctxt "@info"
msgid ""
"<para>The signal name field also provides completion when the target "
"application is running and the emitter name was set.</para>\n"
"\n"
"<para>Note that the completion list can also be triggered using the standard "
"shortcut <shortcut>Ctrl+T</shortcut> when the focus is on a text edition "
"widget. Click on the <link url=\"widget:signalNameLineEdit\">signal name "
"field</link> to give it the focus, then press <shortcut>Ctrl+T</shortcut> to "
"show all the signals that can be emitted by the <interface>Ok</interface> "
"button.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:526
msgctxt "@info"
msgid ""
"<para>As it was explained before, we want to react when the <interface>Ok</"
"interface> button is clicked, so select the <emphasis>clicked()</emphasis> "
"signal from the completion list.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:547
msgctxt "@info"
msgid ""
"<para>Now that the emitter and signal names were set <link url=\"widget:"
"editWaitForSignalDialog/okButton\">accept the dialog</link>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:561
msgctxt "@info"
msgid ""
"<para>The user accepting the dialog to add a new step will make our example "
"tutorial to change to its last step.</para>\n"
"\n"
"<para>Set the <link url=\"widget:responseStepLineEdit\">step to change to</"
"link> to <emphasis>end</emphasis>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:596
msgctxt "@info"
msgid ""
"<para>The last step in the tutorial will just inform the user that the "
"tutorial is done.</para>\n"
"\n"
"<para>As with the previous ones, we have to start by <link url=\"widget:"
"addStepToolButton\">adding a new step</link>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:610
msgctxt "@info"
msgid ""
"<para>Set the <link url=\"widget:idLineEdit\">id of the step</link> to "
"<emphasis>end</emphasis>.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:631
msgctxt "@info"
msgid ""
"<para>Set the <link url=\"widget:textTextEdit\">text of the step</link> to:</"
"para>\n"
"\n"
"<para><emphasis>And that's all!</emphasis></para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:643
msgid "And that's all!"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:666
msgctxt "@info"
msgid ""
"<para>Well, now that we have added that last step the example tutorial is "
"done. But, when designing a tutorial, how can we know that it does what we "
"expect it to do?</para>\n"
"\n"
"<para><application>KTutorial editor</application> is able to start the "
"tutorial being designed in its target application without having to manually "
"export and install the tutorial. This way you can truly check that the "
"tutorial will behave as you expect.</para>\n"
"\n"
"<para>When testing a tutorial you are advised to use a target application in "
"a clean state, like you would do when using a tutorial from that application."
"</para>\n"
"\n"
"<para>So cancel the dialog to add a new step in the target application if "
"you haven't done it yet. Then, to start in the target application the "
"tutorial we have been editing click on <interface>Edit|Test tutorial</"
"interface>, or the <interface>Test tutorial</interface> button in the "
"toolbar.</para>"
msgstr ""

#: src/tutorials/InteractingWithTheTargetApplication.js:680
msgctxt "@info"
msgid ""
"<para>The tutorial shown in the target application is the one we have been "
"designing. If you add a new step, it will change to the second step, and if "
"you accept the dialog it will change to the last step.</para>\n"
"\n"
"<para>Note, however, that when a tutorial is tested it is not installed. The "
"tutorials must be installed to be available in the tutorial list of the "
"target application.</para>\n"
"\n"
"<para>And that's all, the tutorial about the interaction with the target "
"application ends here.</para>"
msgstr ""

#: src/TutorialTester.cpp:80
#, kde-format
msgctxt "@label"
msgid ""
"There was a problem when trying to save the tutorial to a temporary file (to "
"be used by the target application to test the tutorial):<nl/>%1"
msgstr ""

#: src/TutorialTester.cpp:98
#, kde-format
msgctxt "@label"
msgid ""
"There was a problem when trying to tell the target application to start the "
"tutorial:<nl/>%1"
msgstr ""

#: src/TutorialTester.cpp:100
msgctxt "@title:window"
msgid "Tutorial could not be started"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, LicenseWidget)
#: src/view/LicenseWidget.ui:14
msgctxt "@title"
msgid "Set tutorial license"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, LicenseWidget)
#: src/view/LicenseWidget.ui:18
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the license of the tutorial.</para>\n"
"<para>The license is copied, commented, to the top of the exported tutorial "
"file. That is, you do not have to worry about how comments are written in "
"the programming language the tutorial will be exported to. Just set the pure "
"text of the license, and the editor will take care of adding the necessary "
"characters in each line to mark them as comments instead of source code.</"
"para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, licenseGroupBox)
#: src/view/LicenseWidget.ui:24
msgctxt "@title"
msgid "License text"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, NewWaitForWidget)
#: src/view/NewWaitForWidget.ui:14
msgctxt "@title"
msgid "New condition to wait for"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, NewWaitForWidget)
#: src/view/NewWaitForWidget.ui:17
msgctxt "@info:whatsthis"
msgid "<para>Selects the type of the new condition.</para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, waitForTypeGroupBox)
#: src/view/NewWaitForWidget.ui:23
msgctxt "@title"
msgid "Condition to wait for type"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, waitForTypeLabel)
#: src/view/NewWaitForWidget.ui:29
msgctxt "@label:listbox"
msgid "Type:"
msgstr ""

#. i18n: ectx: property (text), item, widget (KComboBox, waitForTypeComboBox)
#: src/view/NewWaitForWidget.ui:46
msgctxt "@item:inlistbox"
msgid "All the contained conditions must match"
msgstr ""

#. i18n: ectx: property (text), item, widget (KComboBox, waitForTypeComboBox)
#: src/view/NewWaitForWidget.ui:51
msgctxt "@item:inlistbox"
msgid "Any of the contained conditions must match"
msgstr ""

#. i18n: ectx: property (text), item, widget (KComboBox, waitForTypeComboBox)
#: src/view/NewWaitForWidget.ui:56
msgctxt "@item:inlistbox"
msgid "The contained condition can not match"
msgstr ""

#. i18n: ectx: property (text), item, widget (KComboBox, waitForTypeComboBox)
#: src/view/NewWaitForWidget.ui:66
msgctxt "@item:inlistbox"
msgid "The specified event is received"
msgstr ""

#. i18n: ectx: property (text), item, widget (KComboBox, waitForTypeComboBox)
#: src/view/NewWaitForWidget.ui:76
msgctxt "@item:inlistbox"
msgid "The specified property has certain value"
msgstr ""

#. i18n: ectx: property (text), item, widget (KComboBox, waitForTypeComboBox)
#: src/view/NewWaitForWidget.ui:81
msgctxt "@item:inlistbox"
msgid "The step is activated"
msgstr ""

#: src/view/ReactionTreeItem.cpp:51
msgctxt "@item"
msgid "Reaction"
msgstr ""

#: src/view/ReactionTreeItem.cpp:79
msgctxt "@item"
msgid "(No condition set)"
msgstr ""

#: src/view/ReactionTreeItem.cpp:99
msgctxt "@item:intext"
msgid "(option name not set)"
msgstr ""

#: src/view/ReactionTreeItem.cpp:105
#, kde-format
msgctxt "@item"
msgid "When the option %1 is selected"
msgstr ""

#: src/view/ReactionTreeItem.cpp:111
msgctxt "@item"
msgid "Execute the following code:"
msgstr ""

#: src/view/ReactionTreeItem.cpp:120
msgctxt "@item"
msgid "(No code set)"
msgstr ""

#: src/view/ReactionTreeItem.cpp:135
msgctxt "@item:intext"
msgid "(step id not set)"
msgstr ""

#: src/view/ReactionTreeItem.cpp:141
#, kde-format
msgctxt "@item"
msgid "Change to step %1"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, ReactionWidget)
#: src/view/ReactionWidget.ui:18
msgctxt "@info:whatsthis"
msgid ""
"<para>Edit the response of a step to certain trigger.</para>\n"
"<para>When a step is active, the actions of the user can trigger a response "
"in the tutorial. A trigger can be an option in the step selected by the "
"user, or a condition that was met. The response can be changing to another "
"step, or executing some custom code.</para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, triggerGroupBox)
#: src/view/ReactionWidget.ui:24
msgctxt "@title:group Something that causes a response"
msgid "Trigger"
msgstr ""

#. i18n: ectx: property (text), widget (QRadioButton, triggerOptionRadioButton)
#: src/view/ReactionWidget.ui:32
msgctxt "@option:radio"
msgid "Option:"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, triggerOptionLineEdit)
#: src/view/ReactionWidget.ui:40
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the option.</para>\n"
"<para>An option with this name will be added to the step, so the same name "
"set here will be shown to the user.</para>"
msgstr ""

#. i18n: ectx: property (text), widget (QRadioButton, triggerConditionRadioButton)
#: src/view/ReactionWidget.ui:51
msgctxt "@option:radio"
msgid "Condition met:"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, responseGroupBox)
#: src/view/ReactionWidget.ui:63
msgctxt "@title:group"
msgid "Response"
msgstr ""

#. i18n: ectx: property (text), widget (QRadioButton, responseStepRadioButton)
#: src/view/ReactionWidget.ui:71
msgctxt "@option:radio"
msgid "Change to step:"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, responseStepLineEdit)
#: src/view/ReactionWidget.ui:78
msgctxt "@info:whatsthis"
msgid "<para>The id of the step to change to.</para>"
msgstr ""

#. i18n: ectx: property (text), widget (QRadioButton, responseCodeRadioButton)
#: src/view/ReactionWidget.ui:89
msgctxt "@option:radio"
msgid "Custom response code:"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KTextEdit, responseCodeTextEdit)
#: src/view/ReactionWidget.ui:98
msgctxt "@info:whatsthis"
msgid ""
"<para>The custom code to execute.</para>\n"
"<para>The code will be written as is into a new function called when the "
"response is triggered. This means that the code must be written in the same "
"programming language the tutorial will be exported to.</para>\n"
"<para>Also note that you only have to provide the body of the function. The "
"signature is automatically generated.</para>"
msgstr ""

#: src/view/RemoteObjectChooser.cpp:126
msgctxt "@label"
msgid ""
"The target application has been closed, but it must be running to be able to "
"choose the objects."
msgstr ""

#: src/view/RemoteObjectChooser.cpp:128
msgctxt "@title:window"
msgid "Target application closed"
msgstr ""

#: src/view/RemoteObjectChooser.cpp:144
msgctxt "@label"
msgid ""
"<para>The <application>KTutorial editor</application> windows will be hidden "
"and only the list with the objects in the target application will be shown. "
"It is made to better view when a widget is highlighted in the target "
"application.</para><para>The <application>KTutorial editor</application> "
"windows will be shown again once the selection list is closed.</para>"
msgstr ""

#: src/view/RemoteObjectChooser.cpp:150
msgctxt "@title:window"
msgid "<application>KTutorial editor</application> windows will be hidden"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, RemoteObjectChooser)
#: src/view/RemoteObjectChooser.ui:14
msgctxt "@title:window"
msgid "Target application objects"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, RemoteObjectChooser)
#: src/view/RemoteObjectChooser.ui:19
msgctxt "@info:whatsthis"
msgid ""
"<p>Chooser for objects in the target application.</p>\n"
"<p>The objects shown in the list are all the objects accessible through "
"KTutorial. They are shown in a tree structure to represent the parent and "
"child relationships the objects have.</p>\n"
"<p>Note, however, that not all the objects have a name set in the target "
"application. KTutorial needs to know the name of the object to find it, so "
"if an object does not have a name KTutorial will not be able to use it.</p>"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QGroupBox, filtersGroupBox)
#: src/view/RemoteObjectChooser.ui:27
msgctxt "@info:whatsthis"
msgid ""
"<p>Filters the objects shown in the list.</p>\n"
"\n"
"<p>Note, however, that if an object has to be shown in the list its parent "
"object is also shown even if it should have been filtered.</p>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, filtersGroupBox)
#: src/view/RemoteObjectChooser.ui:30
msgctxt "@title:group"
msgid "Filters"
msgstr ""

#. i18n: ectx: property (text), widget (QCheckBox, showOnlyNamedObjectsCheckBox)
#: src/view/RemoteObjectChooser.ui:36
msgctxt "@option:check"
msgid "Show only named objects"
msgstr ""

#. i18n: ectx: property (text), widget (QCheckBox, showOnlyWidgetsCheckBox)
#: src/view/RemoteObjectChooser.ui:43
msgctxt "@option:check"
msgid "Show only widgets"
msgstr ""

#: src/view/RemoteObjectNameWidget.cpp:204
#, kde-format
msgctxt "@label"
msgid ""
"The object name can not be set, there was a problem getting the name from "
"the target application: %1"
msgstr ""

#: src/view/RemoteObjectNameWidget.cpp:206
msgctxt "@title"
msgid "Can not communicate with the target application"
msgstr ""

#: src/view/RemoteObjectNameWidget.cpp:213
msgctxt "@label"
msgid ""
"There is no unique name for the chosen object (at least, in the current "
"state of the target application), so it is not possible to refer to that "
"object in a tutorial. The target application must be modified to provide a "
"unique name for that object."
msgstr ""

#: src/view/RemoteObjectNameWidget.cpp:217
msgctxt "@title"
msgid "The chosen object has no unique name"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, RemoteObjectNameWidget)
#: src/view/RemoteObjectNameWidget.ui:14
msgctxt "@title"
msgid "Choose the remote object name"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, RemoteObjectNameWidget)
#: src/view/RemoteObjectNameWidget.ui:18
msgctxt "@info:whatsthis"
msgid ""
"<para>Choose the name of the remote object.</para>\n"
"<para>If the name is known, it can be directly written. Else, it can be "
"chosen from all the objects currently available in the target application.</"
"para>"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, objectNameLineEdit)
#: src/view/RemoteObjectNameWidget.ui:28
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the QObject.</para>\n"
"<para>Note that the name is not the class of the object, but the string "
"returned by its objectName() method.</para>"
msgstr ""

#. i18n: ectx: property (toolTip), widget (KPushButton, objectNamePushButton)
#: src/view/RemoteObjectNameWidget.ui:35
msgctxt "@info:tooltip"
msgid ""
"Choose the object name from a list with all the objects in the target "
"application"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KPushButton, objectNamePushButton)
#: src/view/RemoteObjectNameWidget.ui:41
msgctxt "@info:whatsthis"
msgid ""
"<p>Opens the list with all the objects in the target application to select "
"the object from them.</p>\n"
"<p>The object list must be gotten from a running application. The first time "
"that you try to choose the object name you will be asked for the target "
"application of the tutorial. A new instance of the application will then be "
"started to know the available objects.</p>\n"
"<p>The next time that you try to choose the object name the already running "
"application will be used. If it is quitted, a new instance will be started "
"again.</p>\n"
"<p>When the target application is started all the KTutorial editor windows, "
"except the one with the list, will be hidden. When the list is closed, the "
"windows will be shown again.</p>"
msgstr ""

#. i18n: ectx: property (text), widget (KPushButton, objectNamePushButton)
#: src/view/RemoteObjectNameWidget.ui:44
msgctxt "@action:button"
msgid "Choose..."
msgstr ""

#: src/view/RemoteObjectTreeItem.cpp:41 src/view/RemoteObjectTreeItem.cpp:42
msgctxt "@item:intext"
msgid "D-Bus Error!"
msgstr ""

#: src/view/RemoteObjectTreeItem.cpp:46
msgctxt "@item:intext"
msgid "Object without name!"
msgstr ""

#: src/view/RemoteObjectTreeItem.cpp:50
msgctxt "@item:intext"
msgid "No class name!"
msgstr ""

#: src/view/RemoteObjectTreeItem.cpp:57
#, kde-format
msgctxt "@item Object name (Class name)"
msgid "%1 (%2)"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:55
msgctxt "@info:tooltip"
msgid "Emphasized text"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:57
msgctxt "@info:whatsthis"
msgid ""
"Phrase tag to emphasize a word or phrase in the text.<nl/>Example: "
"<emphasis>emphasized text</emphasis>"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:67
msgctxt "@info:tooltip"
msgid "Strongly emphasized text"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:69
msgctxt "@info:whatsthis"
msgid ""
"Phrase tag to strongly emphasize a word or phrase in the text.<nl/>Example: "
"<emphasis strong=\"1\">strongly emphasized text</emphasis>"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:79
msgctxt "@info:tooltip"
msgid "Filename or path"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:81
msgctxt "@info:whatsthis"
msgid ""
"Phrase tag for file or folder name or path.<nl/>The path separators will be "
"transformed into what is native to the platform.<nl/>Example: <filename>/"
"home/user/Music/song.ogg</filename>"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:93
msgctxt "@info:tooltip"
msgid "GUI interface element"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:95
msgctxt "@info:whatsthis"
msgid ""
"Phrase tag for paths to GUI interface elements.<nl/>If there is more than "
"one element in the path, use \"|\" to delimit elements, which will be "
"converted into canonical delimiter.<nl/>Example: <interface>File|Open</"
"interface>"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:106
msgctxt "@info:tooltip"
msgid "Link to URL or widget"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:108
msgctxt "@info:whatsthis"
msgid ""
"Phrase tag to link to a URL-addressable resource.<nl/>Widgets in the target "
"application interface can be linked using <emphasis>widget:"
"theObjectNameOfTheWidget</emphasis><nl/>Example: <link url=\"http://www.kde."
"org\">a link</link>"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:117
msgctxt "@info:tooltip"
msgid "Line break"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:119
msgctxt "@info:whatsthis"
msgid "Phrase tag for line breaks.<nl/>Example: line<nl/>break"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:128
msgctxt "@info:tooltip"
msgid "Combination of keys to press"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:130
msgctxt "@info:whatsthis"
msgid ""
"Phrase tag for combinations of keys to press.<nl/>Separate the keys by \"+\" "
"or \"-\", and the shortcut will be converted into canonical form.<nl/"
">Example: <shortcut>Ctrl+N</shortcut>"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:141
msgctxt "@info:tooltip"
msgid "Paragraph"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:143
msgctxt "@info:whatsthis"
msgid ""
"<para>Structure tag for text paragraphs.<nl/>Example: one paragraph</"
"para><para>Other paragraph</para>"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:151
msgctxt "@info:tooltip"
msgid "List of items"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:153
msgctxt "@info:whatsthis"
msgid ""
"<para>Structure tag for lists of items.<nl/>Can contain only &lt;item&gt; as "
"subtags. List is considered an element of the paragraph, so the &lt;list&gt; "
"must be found inside &lt;para&gt;.<nl/>Example: <list>            <item>One "
"item</item>            <item>Other item</item>         </list></para>"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:167
msgctxt "@info:tooltip"
msgid "List items"
msgstr ""

#: src/view/SemanticMarkupEdition.cpp:169
msgctxt "@info:whatsthis"
msgid ""
"<para>Structure tag for list items.<nl/>Example: <list>            <item>One "
"item</item>            <item>Other item</item>         </list></para>"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, SemanticMarkupLinkWidget)
#: src/view/SemanticMarkupLinkWidget.ui:20
msgctxt "@title"
msgid "URL for <emphasis>link</emphasis> element"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, SemanticMarkupLinkWidget)
#: src/view/SemanticMarkupLinkWidget.ui:29
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the <emphasis>url</emphasis> attribute for the <emphasis>link</"
"emphasis> semantic element.</para>\n"
"\n"
"<para>Any URL can be set in the <interface>Generic</interface> field. For "
"example, the URL of a webpage or the URL to link to a widget.</para>\n"
"\n"
"<para>However, to link to a widget it is better to just write the object "
"name of the desired widget in the <interface>Widget</interface> field. "
"Moreover, that field provides also text completion for the names and a "
"dialog to choose the widget from a running target application.</para>\n"
"\n"
"<para>These advanced features, though, are not available in every system; if "
"<application>KTutorial editor</application> was not built with "
"<application>QtDBus</application> support only a plain text line will be "
"shown. Again, only the name has to be written in the text line for the "
"widget; <emphasis>widget:</emphasis> is automatically added to the URL when "
"the dialog is accepted.</para>"
msgstr ""

#. i18n: ectx: property (text), widget (QRadioButton, genericLinkRadioButton)
#: src/view/SemanticMarkupLinkWidget.ui:39
msgctxt "@option:radio Generic link URL"
msgid "Generic"
msgstr ""

#. i18n: ectx: property (text), widget (QRadioButton, widgetLinkRadioButton)
#: src/view/SemanticMarkupLinkWidget.ui:46
msgctxt "@option:radio Widget link URL"
msgid "Widget"
msgstr ""

#: src/view/StepCustomCodeWidget.cpp:40
msgctxt "@title"
msgid "Step setup code"
msgstr ""

#: src/view/StepCustomCodeWidget.cpp:41
msgctxt "@title"
msgid "Set the step setup code"
msgstr ""

#: src/view/StepCustomCodeWidget.cpp:42
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the code to be executed when the tutorials passes to the step.</"
"para><para>The code will be written as is to the setup of the step, after "
"the setup code generated automatically by the editor. This means that the "
"code must be written in the same programming language the tutorial will be "
"exported to.</para>"
msgstr ""

#: src/view/StepCustomCodeWidget.cpp:51
msgctxt "@title"
msgid "Step tear down code"
msgstr ""

#: src/view/StepCustomCodeWidget.cpp:52
msgctxt "@title"
msgid "Set the step tear down code"
msgstr ""

#: src/view/StepCustomCodeWidget.cpp:53
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the code to be executed when the tutorial changes from this step "
"to another.</para><para>The code will be written as is to the tear down of "
"the step, before the tear down code generated automatically by the editor. "
"This means that the code must be written in the same programming language "
"the tutorial will be exported to.</para>"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, StepDataWidget)
#: src/view/StepDataWidget.ui:14
msgctxt "@title"
msgid "Set step data"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, StepDataWidget)
#: src/view/StepDataWidget.ui:19
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the id and the text of the step</para>\n"
"<para>The text is shown to the user when the tutorial changes to that step.</"
"para>\n"
"<para>On the other hand, the id is only used internally and never shown to "
"the user. It is used to identify the steps in the tutorial when it has to "
"change from one to step to another.</para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, stepDataGroupBox)
#: src/view/StepDataWidget.ui:25
msgctxt "@title"
msgid "Step data"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, idLabel)
#: src/view/StepDataWidget.ui:33
msgctxt "@label:textbox"
msgid "Id:"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, textLabel)
#: src/view/StepDataWidget.ui:50
msgctxt "@label:textbox"
msgid "Text:"
msgstr ""

#: src/view/StepTreeItem.cpp:56
msgctxt "@item:intext"
msgid "(id not set)"
msgstr ""

#: src/view/StepTreeItem.cpp:59
#, kde-format
msgctxt "@item Noun, a step in a tutorial"
msgid "Step %1"
msgstr ""

#: src/view/StepTreeItem.cpp:94
msgctxt "@item:intext"
msgid "(text not set)"
msgstr ""

#: src/view/StepTreeItem.cpp:98
#, kde-format
msgctxt "@item"
msgid "Text: %1"
msgstr ""

#: src/view/StepTreeItem.cpp:106 src/view/TutorialTreeItem.cpp:119
msgctxt "@item"
msgid "Setup:"
msgstr ""

#: src/view/StepTreeItem.cpp:116 src/view/TutorialTreeItem.cpp:129
msgctxt "@item"
msgid "Tear down:"
msgstr ""

#: src/view/TargetApplicationView.cpp:101
msgctxt "@title:window"
msgid "Problem starting the target application"
msgstr ""

#: src/view/TargetApplicationView.cpp:106
msgctxt "@label"
msgid ""
"The selected application could not be executed. Check the executable file "
"permissions."
msgstr ""

#: src/view/TargetApplicationView.cpp:109
msgctxt "@label"
msgid ""
"The selected application does not seem to have the KTutorial editor support "
"module enabled. This can happen because the application does not use "
"KTutorial, or because it took it too much time to start."
msgstr ""

#: src/view/TargetApplicationView.cpp:114
msgctxt "@label"
msgid ""
"Cannot connect to the D-Bus session bus.There is no way to communicate with "
"the target application."
msgstr ""

#: src/view/TutorialCustomCodeWidget.cpp:41
msgctxt "@title"
msgid "Tutorial setup code"
msgstr ""

#: src/view/TutorialCustomCodeWidget.cpp:42
msgctxt "@title"
msgid "Set the tutorial setup code"
msgstr ""

#: src/view/TutorialCustomCodeWidget.cpp:43
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the code to be executed when the tutorial starts.</para><para>The "
"code will be written as is to the setup of the tutorial, after the setup "
"code generated automatically by the editor. This means that the code must be "
"written in the same programming language the tutorial will be exported to.</"
"para>"
msgstr ""

#: src/view/TutorialCustomCodeWidget.cpp:52
msgctxt "@title"
msgid "Tutorial tear down code"
msgstr ""

#: src/view/TutorialCustomCodeWidget.cpp:53
msgctxt "@title"
msgid "Set the tutorial tear down code"
msgstr ""

#: src/view/TutorialCustomCodeWidget.cpp:54
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the code to be executed when the tutorial finishes.</"
"para><para>The code will be written as is to the tear down of the tutorial, "
"before the tear down code generated automatically by the editor. This means "
"that the code must be written in the same programming language the tutorial "
"will be exported to.</para>"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, TutorialInformationWidget)
#: src/view/TutorialInformationWidget.ui:14
msgctxt "@title"
msgid "Set tutorial information"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, TutorialInformationWidget)
#: src/view/TutorialInformationWidget.ui:18
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the name and description of the tutorial.</para>\n"
"<para>The name and the description are shown in the dialog where the "
"tutorial to be started is selected.</para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, tutorialInformationGroupBox)
#: src/view/TutorialInformationWidget.ui:24
msgctxt "@title"
msgid "Tutorial information"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, nameLabel)
#: src/view/TutorialInformationWidget.ui:32
msgctxt "@label:textbox Noun, the name of a tutorial"
msgid "Name:"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, descriptionLabel)
#: src/view/TutorialInformationWidget.ui:49
msgctxt "@label:textbox"
msgid "Description:"
msgstr ""

#: src/view/TutorialTreeItem.cpp:57
msgctxt "@item"
msgid "Tutorial"
msgstr ""

#: src/view/TutorialTreeItem.cpp:60
#, kde-format
msgctxt "@item"
msgid "Tutorial %1"
msgstr ""

#: src/view/TutorialTreeItem.cpp:80
msgctxt "@item:intext"
msgid "(name not set)"
msgstr ""

#: src/view/TutorialTreeItem.cpp:93
#, kde-format
msgctxt "@item Noun, the name of a tutorial"
msgid "Name: %1"
msgstr ""

#: src/view/TutorialTreeItem.cpp:97
msgctxt "@item:intext"
msgid "(description not set)"
msgstr ""

#: src/view/TutorialTreeItem.cpp:101
#, kde-format
msgctxt "@item"
msgid "Description: %1"
msgstr ""

#: src/view/TutorialTreeItem.cpp:109
msgctxt "@item"
msgid "License:"
msgstr ""

#: src/view/WaitForComposedTreeItem.cpp:46
msgctxt "@item"
msgid "When all the contained conditions match"
msgstr ""

#: src/view/WaitForComposedTreeItem.cpp:49
msgctxt "@item"
msgid "When any of the contained conditions match"
msgstr ""

#: src/view/WaitForEventTreeItem.cpp:40 src/view/WaitForSignalTreeItem.cpp:40
msgctxt "@item:intext"
msgid "(object not set)"
msgstr ""

#: src/view/WaitForEventTreeItem.cpp:47
msgctxt "@item:intext"
msgid "(event not set)"
msgstr ""

#: src/view/WaitForEventTreeItem.cpp:52
#, kde-format
msgctxt "@item"
msgid "When the event %1 is received by object %2"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, WaitForEventWidget)
#: src/view/WaitForEventWidget.ui:14
msgctxt "@title"
msgid "Edit event to wait for"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, WaitForEventWidget)
#: src/view/WaitForEventWidget.ui:17
msgctxt "@info:whatsthis"
msgid "<para>Set the receiver name and the event to wait for.</para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, waitForEventGroupBox)
#: src/view/WaitForEventWidget.ui:23
msgctxt "@title:group"
msgid "Wait for event"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, receiverNameLabel)
#: src/view/WaitForEventWidget.ui:31
msgctxt "@label:textbox"
msgid "Receiver name:"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, eventNameLabel)
#: src/view/WaitForEventWidget.ui:44
msgctxt "@label:textbox"
msgid "Event name:"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, receiverNameLineEdit)
#: src/view/WaitForEventWidget.ui:62
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the QObject that receives the event.</para>\n"
"<para>Note that the name is not the class of the object, but the string "
"returned by its objectName() method.</para>"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, eventNameLineEdit)
#: src/view/WaitForEventWidget.ui:70
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the event.</para>\n"
"<para>The name must not contain the \"QEvent::\" prefix, only the pure name "
"of the event.</para>"
msgstr ""

#: src/view/WaitForNotTreeItem.cpp:39
msgctxt "@item"
msgid "The contained condition can not have been met"
msgstr ""

#: src/view/WaitForPropertyTreeItem.cpp:42
#: src/view/WaitForWindowTreeItem.cpp:39
msgctxt "@item:intext"
msgid "(object name not set)"
msgstr ""

#: src/view/WaitForPropertyTreeItem.cpp:49
msgctxt "@item:intext"
msgid "(property not set)"
msgstr ""

#: src/view/WaitForPropertyTreeItem.cpp:56
msgctxt "@item:intext"
msgid "(value not set)"
msgstr ""

#: src/view/WaitForPropertyTreeItem.cpp:61
#, kde-format
msgctxt "@item"
msgid "When the property %1 in the object %2 has the value %3"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, WaitForPropertyWidget)
#: src/view/WaitForPropertyWidget.ui:14
msgctxt "@title"
msgid "Edit property to wait for"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, WaitForPropertyWidget)
#: src/view/WaitForPropertyWidget.ui:17
msgctxt "@info:whatsthis"
msgid ""
"<para>Set the object name, the property name and the value to wait for.</"
"para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, waitForPropertyGroupBox)
#: src/view/WaitForPropertyWidget.ui:23
msgctxt "@title:group"
msgid "Wait for property"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, objectNameLabel)
#: src/view/WaitForPropertyWidget.ui:31
msgctxt "@label:textbox"
msgid "Object name:"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, propertyNameLabel)
#: src/view/WaitForPropertyWidget.ui:44
msgctxt "@label:textbox"
msgid "Property name:"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, valueLabel)
#: src/view/WaitForPropertyWidget.ui:57
msgctxt "@label:textbox"
msgid "Value:"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, objectNameLineEdit)
#: src/view/WaitForPropertyWidget.ui:75
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the QObject that contains the property.</para>\n"
"<para>Note that the name is not the class of the object, but the string "
"returned by its objectName() method.</para>"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, propertyNameLineEdit)
#: src/view/WaitForPropertyWidget.ui:84
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the property.</para>\n"
"<para>Not every property can be used to wait until its value changes to the "
"expected one. Only properties that have a notify signal can be used with "
"that purpose.</para>\n"
"<para>Properties that do not have a notify signal can still be used to "
"enrich other conditions (for example, waiting for a signal to be emitted but "
"only changing to the next step if, in addition, some property has some "
"value), but they can not be used alone as single conditions in a reaction.</"
"para>"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, valueLineEdit)
#: src/view/WaitForPropertyWidget.ui:93
msgctxt "@info:whatsthis"
msgid ""
"<para>The expected value of the property.</para>\n"
"<para>The value is copied as is to the script. That means that it has to be "
"written with the syntax of the script language that the tutorial is going to "
"be exported to. For example, if the tutorial is going to be exported to "
"JavaScript and the value to wait for is a text, the value has to be written "
"as <em>\"The expected text\"</em> (wrapped in quotes).</para>\n"
"<para>The value can even contain a programming expression in the script "
"language. For example, something like <em>t.i18nc(\"@item:inlistbox\", "
"\"Certain item text\")</em> would be used to wait for the localized text of "
"an item in a combo box.</para>"
msgstr ""

#: src/view/WaitForSignalTreeItem.cpp:47
msgctxt "@item:intext"
msgid "(signal not set)"
msgstr ""

#: src/view/WaitForSignalTreeItem.cpp:52
#, kde-format
msgctxt "@item"
msgid "When the signal %1 is emitted by object %2"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, WaitForSignalWidget)
#: src/view/WaitForSignalWidget.ui:14
msgctxt "@title"
msgid "Edit signal to wait for"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, WaitForSignalWidget)
#: src/view/WaitForSignalWidget.ui:17
msgctxt "@info:whatsthis"
msgid "<para>Set the emitter name and the signal to wait for.</para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, waitForSignalGroupBox)
#: src/view/WaitForSignalWidget.ui:23
msgctxt "@title:group"
msgid "Wait for signal"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, emitterNameLabel)
#: src/view/WaitForSignalWidget.ui:31
msgctxt "@label:textbox"
msgid "Emitter name:"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, signalNameLabel)
#: src/view/WaitForSignalWidget.ui:44
msgctxt "@label:textbox"
msgid "Signal name:"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, emitterNameLineEdit)
#: src/view/WaitForSignalWidget.ui:62
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the QObject that emits the signal.</para>\n"
"<para>Note that the name is not the class of the object, but the string "
"returned by its objectName() method.</para>"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, signalNameLineEdit)
#: src/view/WaitForSignalWidget.ui:70
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the signal.</para>\n"
"<para>The name must be written as <em>signalName(TypeOfFirstArgument, "
"TypeOfSecondArgument, TypeOfThirdArgument...)</em>, without including "
"<em>SIGNAL()</em> wrapping text.</para>"
msgstr ""

#: src/view/WaitForStepActivationTreeItem.cpp:34
msgctxt "@item"
msgid "When the step is activated"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, WaitForWidget)
#: src/view/WaitForWidget.ui:14
msgctxt "@title"
msgid "Edit condition to wait for"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, WaitForWidget)
#: src/view/WaitForWidget.ui:18
msgctxt "@info:whatsthis"
msgid ""
"<para>Edit a condition to wait for until it is met.</para>\n"
"<para>A condition can be a plain condition or a composed condition. Plain "
"conditions wait for some specific thing to happen, for example, they wait "
"until a signal is emitted. Composed conditions contain other conditions "
"(plain or also composed) and wait until something happens in its contained "
"conditions, for example, wait until all the contained conditions were met.</"
"para>"
msgstr ""

#. i18n: ectx: property (toolTip), widget (KPushButton, addButton)
#: src/view/WaitForWidget.ui:29
msgctxt "@info:tooltip"
msgid "Add a new condition"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KPushButton, addButton)
#: src/view/WaitForWidget.ui:33
msgctxt "@info:whatsthis"
msgid ""
"<para>Adds a new condition.</para>\n"
"<para>A condition has to be added to composed conditions, that is, "
"conditions that contain other conditions, or as the root condition when "
"there is no other condition.</para>"
msgstr ""

#. i18n: ectx: property (text), widget (KPushButton, addButton)
#: src/view/WaitForWidget.ui:36
msgctxt "@action:button"
msgid "Add..."
msgstr ""

#. i18n: ectx: property (toolTip), widget (KPushButton, editButton)
#: src/view/WaitForWidget.ui:43
msgctxt "@info:tooltip"
msgid "Edit the selected condition"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KPushButton, editButton)
#: src/view/WaitForWidget.ui:47
msgctxt "@info:whatsthis"
msgid ""
"<para>Edits the selected condition.</para>\n"
"<para>Only plain conditions, that is, conditions that are not composed by "
"other conditions, can be edited.</para>"
msgstr ""

#. i18n: ectx: property (text), widget (KPushButton, editButton)
#: src/view/WaitForWidget.ui:50
msgctxt "@action:button"
msgid "Edit..."
msgstr ""

#. i18n: ectx: property (toolTip), widget (KPushButton, removeButton)
#: src/view/WaitForWidget.ui:57
msgctxt "@info:tooltip"
msgid "Remove the selected condition"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KPushButton, removeButton)
#: src/view/WaitForWidget.ui:60
msgctxt "@info:whatsthis"
msgid "Removes the selected condition."
msgstr ""

#. i18n: ectx: property (text), widget (KPushButton, removeButton)
#: src/view/WaitForWidget.ui:63
msgctxt "@action:button"
msgid "Remove"
msgstr ""

#: src/view/WaitForWindowTreeItem.cpp:44
#, kde-format
msgctxt "@item"
msgid "When the window %1 is shown"
msgstr ""

#. i18n: ectx: property (windowTitle), widget (QWidget, WaitForWindowWidget)
#: src/view/WaitForWindowWidget.ui:14
msgctxt "@title"
msgid "Edit window to wait for"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (QWidget, WaitForWindowWidget)
#: src/view/WaitForWindowWidget.ui:17
msgctxt "@info:whatsthis"
msgid "<para>Set the object name of the window to wait for.</para>"
msgstr ""

#. i18n: ectx: property (title), widget (QGroupBox, waitForWindowGroupBox)
#: src/view/WaitForWindowWidget.ui:23
msgctxt "@title:group"
msgid "Wait for window"
msgstr ""

#. i18n: ectx: property (text), widget (QLabel, windowObjectNameLabel)
#: src/view/WaitForWindowWidget.ui:31
msgctxt "@label:textbox"
msgid "Window name:"
msgstr ""

#. i18n: ectx: property (whatsThis), widget (KLineEdit, windowObjectNameLineEdit)
#: src/view/WaitForWindowWidget.ui:50
msgctxt "@info:whatsthis"
msgid ""
"<para>The name of the window to be shown.</para>\n"
"<para>Note that the name is not the title of the window or its class name, "
"but the string returned by its objectName() method.</para>\n"
"<para>Also note that it can wait either for windows or for dialogs, not just "
"for windows.</para>"
msgstr ""
